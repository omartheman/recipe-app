at Route.dispatch (C:\Users\HP EliteBook 8470p\Documents\Coding\recipe-app\server files\node_modules\express\lib\router\route.js:112:3)
at Layer.handle [as handle_request] (C:\Users\HP EliteBook 8470p\Documents\Coding\recipe-app\server files\node_modules\express\lib\router\layer.js:95:5)
at C:\Users\HP EliteBook 8470p\Documents\Coding\recipe-app\server files\node_modules\express\lib\router\index.js:281:22
at Function.process_params (C:\Users\HP EliteBook 8470p\Documents\Coding\recipe-app\server files\node_modules\express\lib\router\index.js:335:12)
Got a GET request to /recipeapp/recipeapp-server/;
1 record(s) updated
modified item:
[nodemon] restarting due to changes...
[nodemon] starting `node app.js`
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] starting `node app.js`
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] starting `node app.js`
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] starting `node app.js`
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] starting `node app.js`
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] starting `node app.js`
[nodemon] restarting due to changes...
[nodemon] restarting due to changes...
[nodemon] starting `node app.js`
Server is running on port 4000
req.session.username:  undefined
req.files undefined
req IncomingMessage {
_readableState:
ReadableState {
 objectMode: false,
 highWaterMark: 16384,
 buffer: BufferList { head: null, tail: null, length: 0 },
 length: 0,
 pipes: null,
 pipesCount: 0,
 flowing: true,
 ended: true,
 endEmitted: true,
 reading: false,
 sync: false,
 needReadable: false,
 emittedReadable: false,
 readableListening: false,
 resumeScheduled: false,
 paused: false,
 emitClose: true,
 autoDestroy: false,
 destroyed: false,
 defaultEncoding: 'utf8',
 awaitDrain: 0,
 readingMore: false,
 decoder: null,
 encoding: null },
readable: false,
_events:
[Object: null prototype] { end: [Function: resetHeadersTimeoutOnReqEnd] },
_eventsCount: 1,
_maxListeners: undefined,
socket:
Socket {
 connecting: false,
 _hadError: false,
 _handle:
  TCP {
    reading: true,
    onread: [Function: onStreamRead],
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular] },
 _parent: null,
 _host: null,
 _readableState:
  ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    paused: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrain: 0,
    readingMore: false,
    decoder: null,
    encoding: null },
 readable: true,
 _events:
  [Object: null prototype] {
    end: [Array],
    drain: [Array],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Array],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause] },
 _eventsCount: 8,
 _maxListeners: undefined,
 _writableState:
  WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: [Object] },
 writable: true,
 allowHalfOpen: true,
 _sockname: null,
 _pendingData: null,
 _pendingEncoding: '',
 server:
  Server {
    _events: [Object],
    _eventsCount: 2,
    _maxListeners: undefined,
    _connections: 5,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 120000,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 40000,
    _connectionKey: '6::::4000',
    [Symbol(IncomingMessage)]: [Function],
    [Symbol(ServerResponse)]: [Function],
    [Symbol(asyncId)]: 6 },
 _server:
  Server {
    _events: [Object],
    _eventsCount: 2,
    _maxListeners: undefined,
    _connections: 5,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 120000,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 40000,
    _connectionKey: '6::::4000',
    [Symbol(IncomingMessage)]: [Function],
    [Symbol(ServerResponse)]: [Function],
    [Symbol(asyncId)]: 6 },
 timeout: 120000,
 parser:
  HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular],
    incoming: [Circular],
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1607825013120,
    [Symbol(isReused)]: false },
 on: [Function: socketOnWrap],
 _paused: false,
 _httpMessage:
  ServerResponse {
    _events: [Object],
    _eventsCount: 1,
    _maxListeners: undefined,
    output: [],
    outputEncodings: [],
    outputCallbacks: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: [Circular],
    connection: [Circular],
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(isCorked)]: false,
    [Symbol(outHeadersKey)]: [Object] },
 [Symbol(asyncId)]: 83,
 [Symbol(lastWriteQueueSize)]: 0,
 [Symbol(timeout)]:
  Timeout {
    _called: false,
    _idleTimeout: 120000,
    _idlePrev: [Timeout],
    _idleNext: [TimersList],
    _idleStart: 5615,
    _onTimeout: [Function: bound ],
    _timerArgs: undefined,
    _repeat: null,
    _destroyed: false,
    [Symbol(unrefed)]: true,
    [Symbol(asyncId)]: 84,
    [Symbol(triggerId)]: 83 },
 [Symbol(kBytesRead)]: 0,
 [Symbol(kBytesWritten)]: 0 },
connection:
Socket {
 connecting: false,
 _hadError: false,
 _handle:
  TCP {
    reading: true,
    onread: [Function: onStreamRead],
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular] },
 _parent: null,
 _host: null,
 _readableState:
  ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    paused: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrain: 0,
    readingMore: false,
    decoder: null,
    encoding: null },
 readable: true,
 _events:
  [Object: null prototype] {
    end: [Array],
    drain: [Array],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Array],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause] },
 _eventsCount: 8,
 _maxListeners: undefined,
 _writableState:
  WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: [Object] },
 writable: true,
 allowHalfOpen: true,
 _sockname: null,
 _pendingData: null,
 _pendingEncoding: '',
 server:
  Server {
    _events: [Object],
    _eventsCount: 2,
    _maxListeners: undefined,
    _connections: 5,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 120000,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 40000,
    _connectionKey: '6::::4000',
    [Symbol(IncomingMessage)]: [Function],
    [Symbol(ServerResponse)]: [Function],
    [Symbol(asyncId)]: 6 },
 _server:
  Server {
    _events: [Object],
    _eventsCount: 2,
    _maxListeners: undefined,
    _connections: 5,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 120000,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 40000,
    _connectionKey: '6::::4000',
    [Symbol(IncomingMessage)]: [Function],
    [Symbol(ServerResponse)]: [Function],
    [Symbol(asyncId)]: 6 },
 timeout: 120000,
 parser:
  HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular],
    incoming: [Circular],
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1607825013120,
    [Symbol(isReused)]: false },
 on: [Function: socketOnWrap],
 _paused: false,
 _httpMessage:
  ServerResponse {
    _events: [Object],
    _eventsCount: 1,
    _maxListeners: undefined,
    output: [],
    outputEncodings: [],
    outputCallbacks: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: [Circular],
    connection: [Circular],
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(isCorked)]: false,
    [Symbol(outHeadersKey)]: [Object] },
 [Symbol(asyncId)]: 83,
 [Symbol(lastWriteQueueSize)]: 0,
 [Symbol(timeout)]:
  Timeout {
    _called: false,
    _idleTimeout: 120000,
    _idlePrev: [Timeout],
    _idleNext: [TimersList],
    _idleStart: 5615,
    _onTimeout: [Function: bound ],
    _timerArgs: undefined,
    _repeat: null,
    _destroyed: false,
    [Symbol(unrefed)]: true,
    [Symbol(asyncId)]: 84,
    [Symbol(triggerId)]: 83 },
 [Symbol(kBytesRead)]: 0,
 [Symbol(kBytesWritten)]: 0 },
httpVersionMajor: 1,
httpVersionMinor: 1,
httpVersion: '1.1',
complete: true,
headers:
{ host: 'localhost:4000',
 connection: 'keep-alive',
 'content-length': '7',
 accept: 'application/json, text/plain, */*',
 'cache-control': 'no-cache',
 'user-agent':
  'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36',
 'content-type': 'application/json;charset=UTF-8',
 origin: 'http://localhost:3000',
 'sec-fetch-site': 'same-site',
 'sec-fetch-mode': 'cors',
 'sec-fetch-dest': 'empty',
 referer: 'http://localhost:3000/',
 'accept-encoding': 'gzip, deflate, br',
 'accept-language': 'en-US,en;q=0.9,sv;q=0.8,fr;q=0.7',
 cookie:
  'connect.sid=s%3A-MjA0M_2wggRujrH6cRgPooxqufft4N4.wE6%2BRa8zOOKsuIv%2BNXsYFPtnFIX5WYRFCqUr7%2FBjYRc' },
rawHeaders:
[ 'Host',
 'localhost:4000',
 'Connection',
 'keep-alive',
 'Content-Length',
 '7',
 'Accept',
 'application/json, text/plain, */*',
 'Cache-Control',
 'no-cache',
 'User-Agent',
 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36',
 'Content-Type',
 'application/json;charset=UTF-8',
 'Origin',
 'http://localhost:3000',
 'Sec-Fetch-Site',
 'same-site',
 'Sec-Fetch-Mode',
 'cors',
 'Sec-Fetch-Dest',
 'empty',
 'Referer',
 'http://localhost:3000/',
 'Accept-Encoding',
 'gzip, deflate, br',
 'Accept-Language',
 'en-US,en;q=0.9,sv;q=0.8,fr;q=0.7',
 'Cookie',
 'connect.sid=s%3A-MjA0M_2wggRujrH6cRgPooxqufft4N4.wE6%2BRa8zOOKsuIv%2BNXsYFPtnFIX5WYRFCqUr7%2FBjYRc' ],
trailers: {},
rawTrailers: [],
aborted: false,
upgrade: false,
url: '/recipeapp/recipeapp-server/image-upload',
method: 'POST',
statusCode: null,
statusMessage: null,
client:
Socket {
 connecting: false,
 _hadError: false,
 _handle:
  TCP {
    reading: true,
    onread: [Function: onStreamRead],
    onconnection: null,
    _consumed: true,
    [Symbol(owner)]: [Circular] },
 _parent: null,
 _host: null,
 _readableState:
  ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: true,
    ended: false,
    endEmitted: false,
    reading: true,
    sync: false,
    needReadable: true,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    paused: false,
    emitClose: false,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrain: 0,
    readingMore: false,
    decoder: null,
    encoding: null },
 readable: true,
 _events:
  [Object: null prototype] {
    end: [Array],
    drain: [Array],
    timeout: [Function: socketOnTimeout],
    data: [Function: bound socketOnData],
    error: [Function: socketOnError],
    close: [Array],
    resume: [Function: onSocketResume],
    pause: [Function: onSocketPause] },
 _eventsCount: 8,
 _maxListeners: undefined,
 _writableState:
  WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: false,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: false,
    autoDestroy: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: [Object] },
 writable: true,
 allowHalfOpen: true,
 _sockname: null,
 _pendingData: null,
 _pendingEncoding: '',
 server:
  Server {
    _events: [Object],
    _eventsCount: 2,
    _maxListeners: undefined,
    _connections: 5,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 120000,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 40000,
    _connectionKey: '6::::4000',
    [Symbol(IncomingMessage)]: [Function],
    [Symbol(ServerResponse)]: [Function],
    [Symbol(asyncId)]: 6 },
 _server:
  Server {
    _events: [Object],
    _eventsCount: 2,
    _maxListeners: undefined,
    _connections: 5,
    _handle: [TCP],
    _usingWorkers: false,
    _workers: [],
    _unref: false,
    allowHalfOpen: true,
    pauseOnConnect: false,
    httpAllowHalfOpen: false,
    timeout: 120000,
    keepAliveTimeout: 5000,
    maxHeadersCount: null,
    headersTimeout: 40000,
    _connectionKey: '6::::4000',
    [Symbol(IncomingMessage)]: [Function],
    [Symbol(ServerResponse)]: [Function],
    [Symbol(asyncId)]: 6 },
 timeout: 120000,
 parser:
  HTTPParser {
    '0': [Function: parserOnHeaders],
    '1': [Function: parserOnHeadersComplete],
    '2': [Function: parserOnBody],
    '3': [Function: parserOnMessageComplete],
    '4': [Function: bound onParserExecute],
    _headers: [],
    _url: '',
    socket: [Circular],
    incoming: [Circular],
    outgoing: null,
    maxHeaderPairs: 2000,
    _consumed: true,
    onIncoming: [Function: bound parserOnIncoming],
    parsingHeadersStart: 1607825013120,
    [Symbol(isReused)]: false },
 on: [Function: socketOnWrap],
 _paused: false,
 _httpMessage:
  ServerResponse {
    _events: [Object],
    _eventsCount: 1,
    _maxListeners: undefined,
    output: [],
    outputEncodings: [],
    outputCallbacks: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: [Circular],
    connection: [Circular],
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(isCorked)]: false,
    [Symbol(outHeadersKey)]: [Object] },
 [Symbol(asyncId)]: 83,
 [Symbol(lastWriteQueueSize)]: 0,
 [Symbol(timeout)]:
  Timeout {
    _called: false,
    _idleTimeout: 120000,
    _idlePrev: [Timeout],
    _idleNext: [TimersList],
    _idleStart: 5615,
    _onTimeout: [Function: bound ],
    _timerArgs: undefined,
    _repeat: null,
    _destroyed: false,
    [Symbol(unrefed)]: true,
    [Symbol(asyncId)]: 84,
    [Symbol(triggerId)]: 83 },
 [Symbol(kBytesRead)]: 0,
 [Symbol(kBytesWritten)]: 0 },
_consuming: true,
_dumped: false,
next: [Function: next],
baseUrl: '',
originalUrl: '/recipeapp/recipeapp-server/image-upload',
_parsedUrl:
Url {
 protocol: null,
 slashes: null,
 auth: null,
 host: null,
 port: null,
 hostname: null,
 hash: null,
 search: null,
 query: null,
 pathname: '/recipeapp/recipeapp-server/image-upload',
 path: '/recipeapp/recipeapp-server/image-upload',
 href: '/recipeapp/recipeapp-server/image-upload',
 _raw: '/recipeapp/recipeapp-server/image-upload' },
params: {},
query: {},
res:
ServerResponse {
 _events:
  [Object: null prototype] { finish: [Function: bound resOnFinish] },
 _eventsCount: 1,
 _maxListeners: undefined,
 output: [],
 outputEncodings: [],
 outputCallbacks: [],
 outputSize: 0,
 writable: true,
 _last: false,
 chunkedEncoding: false,
 shouldKeepAlive: true,
 useChunkedEncodingByDefault: true,
 sendDate: true,
 _removedConnection: false,
 _removedContLen: false,
 _removedTE: false,
 _contentLength: null,
 _hasBody: true,
 _trailer: '',
 finished: false,
 _headerSent: false,
 socket:
  Socket {
    connecting: false,
    _hadError: false,
    _handle: [TCP],
    _parent: null,
    _host: null,
    _readableState: [ReadableState],
    readable: true,
    _events: [Object],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    timeout: 120000,
    parser: [HTTPParser],
    on: [Function: socketOnWrap],
    _paused: false,
    _httpMessage: [Circular],
    [Symbol(asyncId)]: 83,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]:
     Timeout {
       _called: false,
       _idleTimeout: 120000,
       _idlePrev: [Timeout],
       _idleNext: [TimersList],
       _idleStart: 5615,
       _onTimeout: [Function: bound ],
       _timerArgs: undefined,
       _repeat: null,
       _destroyed: false,
       [Symbol(unrefed)]: true,
       [Symbol(asyncId)]: 84,
       [Symbol(triggerId)]: 83 },
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0 },
 connection:
  Socket {
    connecting: false,
    _hadError: false,
    _handle: [TCP],
    _parent: null,
    _host: null,
    _readableState: [ReadableState],
    readable: true,
    _events: [Object],
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: [WritableState],
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: [Server],
    _server: [Server],
    timeout: 120000,
    parser: [HTTPParser],
    on: [Function: socketOnWrap],
    _paused: false,
    _httpMessage: [Circular],
    [Symbol(asyncId)]: 83,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]:
     Timeout {
       _called: false,
       _idleTimeout: 120000,
       _idlePrev: [Timeout],
       _idleNext: [TimersList],
       _idleStart: 5615,
       _onTimeout: [Function: bound ],
       _timerArgs: undefined,
       _repeat: null,
       _destroyed: false,
       [Symbol(unrefed)]: true,
       [Symbol(asyncId)]: 84,
       [Symbol(triggerId)]: 83 },
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0 },
 _header: null,
 _onPendingData: [Function: bound updateOutgoingData],
 _sent100: false,
 _expect_continue: false,
 req: [Circular],
 locals: [Object: null prototype] {},
 writeHead: [Function: writeHead],
 end: [Function: end],
 [Symbol(isCorked)]: false,
 [Symbol(outHeadersKey)]:
  [Object: null prototype] {
    'x-powered-by': [Array],
    'access-control-allow-origin': [Array],
    vary: [Array],
    'access-control-allow-credentials': [Array] } },
body: [ {}, {} ],
_body: true,
length: undefined,
_parsedOriginalUrl:
Url {
 protocol: null,
 slashes: null,
 auth: null,
 host: null,
 port: null,
 hostname: null,
 hash: null,
 search: null,
 query: null,
 pathname: '/recipeapp/recipeapp-server/image-upload',
 path: '/recipeapp/recipeapp-server/image-upload',
 href: '/recipeapp/recipeapp-server/image-upload',
 _raw: '/recipeapp/recipeapp-server/image-upload' },
sessionStore:
MemoryStore {
 _events:
  [Object: null prototype] {
    disconnect: [Function: ondisconnect],
    connect: [Function: onconnect] },
 _eventsCount: 2,
 _maxListeners: undefined,
 sessions:
  [Object: null prototype] {
    '-MjA0M_2wggRujrH6cRgPooxqufft4N4':
     '{"cookie":{"originalMaxAge":null,"expires":null,"secure":false,"httpOnly":true,"path":"/"}}' },
 generate: [Function] },
sessionID: '-MjA0M_2wggRujrH6cRgPooxqufft4N4',
session:
Session {
 cookie:
  { path: '/',
    _expires: null,
    originalMaxAge: null,
    httpOnly: true,
    secure: false } },
route:
Route {
 path: '/recipeapp/recipeapp-server/image-upload',
 stack: [ [Layer], [Layer] ],
 methods: { post: true } } }